// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2001
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.1

#ifndef ___pcitor48_skel_h__
#define ___pcitor48_skel_h__

#include <pcitor48.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010100L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:pcitor48:1.0
//
class POA_pcitor48 : virtual public PortableServer::ServantBase
{
    POA_pcitor48(const POA_pcitor48&);
    void operator=(const POA_pcitor48&);

protected:

    //
    // IDL:pcitor48/SetLed:1.0
    //
    void _OB_op_SetLed(OB::Upcall_ptr);

    //
    // IDL:pcitor48/Read:1.0
    //
    void _OB_op_Read(OB::Upcall_ptr);

    //
    // IDL:pcitor48/Status:1.0
    //
    void _OB_op_Status(OB::Upcall_ptr);

public:

    POA_pcitor48() { }

    virtual CORBA::Boolean _is_a(const char*)
        throw(CORBA::SystemException);

    virtual CORBA::RepositoryId _primary_interface(const PortableServer::ObjectId&,
                                                   PortableServer::POA_ptr);

    pcitor48_ptr _this();

    virtual OB::DirectStubImpl_ptr _OB_createDirectStubImpl(PortableServer::POA_ptr,
                                                            const PortableServer::ObjectId&);
    virtual void _OB_dispatch(OB::Upcall_ptr);

    //
    // IDL:pcitor48/SetLed:1.0
    //
    virtual void SetLed(CORBA::Short number)
        throw(CORBA::SystemException) = 0;

    //
    // IDL:pcitor48/Read:1.0
    //
    virtual CORBA::Boolean Read(CORBA::Short number)
        throw(CORBA::SystemException) = 0;

    //
    // IDL:pcitor48/Status:1.0
    //
    virtual void Status(CORBA::Short number,
                        CORBA::String_out msg,
                        char*& test)
        throw(CORBA::SystemException) = 0;
};

//
// IDL:pcitor48:1.0
//
class OBDirectStubImpl_pcitor48 : virtual public OBStubImpl_pcitor48,
                                  virtual public OB::DirectStubImpl
{
    OBDirectStubImpl_pcitor48(const OBDirectStubImpl_pcitor48&);
    void operator=(const OBDirectStubImpl_pcitor48&);

protected:

#ifdef HAVE_VCPLUSPLUS_BUGS

    OBDirectStubImpl_pcitor48() { }

#endif

    OBDirectStubImpl_pcitor48(PortableServer::POA_ptr,
                              const PortableServer::ObjectId&,
                              PortableServer::ServantBase*);

    friend class POA_pcitor48;

public:

    //
    // IDL:pcitor48/SetLed:1.0
    //
    virtual void SetLed(CORBA::Short number);

    //
    // IDL:pcitor48/Read:1.0
    //
    virtual CORBA::Boolean Read(CORBA::Short number);

    //
    // IDL:pcitor48/Status:1.0
    //
    virtual void Status(CORBA::Short number,
                        CORBA::String_out msg,
                        char*& test);
};

#endif
